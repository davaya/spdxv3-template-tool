package: "http://spdx.org/spdx/v3/document"
exports: ["Element"]
title: "SPDX v3"
description: "Information Model: serialization derived from SPDXv3 logical model"
license: "CC0-1.0"

Element = Record
  1 id Key(IRI)
  2 type ElementType
  3 name String optional
  4 summary String optional
  5 description String optional
  6 comment String optional
  7 specVersion SemVer
  8 created Created optional
  9 profile ProfileIdentifier[1..*]
 10 dataLicense LicenseId optional
 11 verifiedUsing IntegrityMethod [0..*]    // Verifies Artifact data, not Element properties
 12 externalReference ExternalReference [0..*]
 13 extension Extension [0..*]  // Should be extension point "..."

ElementRef = Record
  1 verifiedUsing IntegrityMethod [1..*]    // Verifies referenced Element properties

ElementType = Choice
  1 identity Identity
  2 annotation Annotation
  3 relationship Relationship
  4 file File
  5 snippet Snippet
  6 collection Collection
  7 package Package
  8 bom BOM
  9 sbom SBOM

Identity = Record
  1 type IdentityType
  2 email String /email optional

Annotation = Record
  1 type AnnotationType
  2 statement String optional
  3 created Created

Relationship = Record
  1 type RelationshipType
  2 to Link(Element) [1..*]
  3 completeness RelationshipCompleteness optional

File = Record
  1 contentType MediaType optional
  2 filePurpose SoftwarePurpose [0..*]
  3 artifactUri ArtifactUri [0..*]
  4 originator Identity [0..*]

Snippet = Record
  1 location SnippetLocation
  2 snippetPurpose SoftwarePurpose [0..*]
  3 artifactUri ArtifactUri [0..*]
  4 originator Identity [0..*]

Collection = Record{1..*}
  1 created Created optional
  2 baseIRI IRI optional
  3 prefixes MapOf(Prefix, IRI)
  4 elements Element [0..*]
  5 elementRefs ElementRef [0..*]

Package = Record
  1 collection Collection
  2 packagePurpose SoftwarePurpose [0..*]

BOM = Record
  1 collection Collection

SBOM = Record
  1 collection Collection

Created = Record
  1 by Link(Element) [1..*]     // must be an Identity element
  2 when DateTime

IdentityType = Choice
  1 person Person
  2 organization Organization
  3 tool Tool

Person = Record

Organization = Record

Tool = Record
  1 userAgent String

IntegrityMethod = Choice
  1 hashes Hashes
  2 signature PublicKeySignature    // A public key by itself is not a checksum

Hashes = Map{1..*}  // Use {alg: val}, not verbose {"algorithm": alg, "hashValue": val}
  1 sha1 Binary{20..20} /x

PublicKeySignature = Record

Extension = Record

ExternalReference = Record
  1 type ExternalReferenceType
  2 locator URI

RelationshipCompleteness = Enumerated
  1 KNOWN
  2 INCOMPLETE
  3 UNKNOWN

SoftwarePurpose = Enumerated
  1 APPLICATION
  2 FRAMEWORK
  3 LIBRARY
  4 CONTAINER
  5 OPERATING-SYSTEM
  6 DEVICE
  7 FIRMWARE
  8 SOURCE
  9 PATCH
 10 ARCHIVE
 11 DOCUMENTATION
 12 EXECUTABLE
 13 MODULE
 14 BOM
 99 OTHER

AnnotationType = Enumerated

DateTime = Integer  // /datetime_ms

ExternalReferenceType = Enumerated

LicenseId = Enumerated  // From license list

MediaType = String

Prefix = String{1..8}

ProfileIdentifier = String

SemVer = String

SnippetLocation = Record

IRI = String /uri   // Element id

ArtifactUri = String /uri

URI = String /uri   // External Reference locator

RelationshipType = Enumerated
  0 NONE
  1 DESCRIBES
  2 DESCRIBED_BY
  3 CONTAINS
  4 CONTAINED_BY
  5 DEPENDS_ON
  6 DEPENENCY_OF
  7 DEPENDENCY_MANIFEST_OF
  8 BUILD_+DEPENDENCY_OF
  9 DEV_DEPENDENCY_OF
 10 OPTIONAL_DEPENDENCY_OF
 11 PROVIDED_DEPENDENCY_OF
 12 TEST_DEPENDENCY_OF
 13 RUNTIME_DEPENDENCY_OF
 14 EXAMPLE_OF
 15 GENERATES
 16 GENERATED_FROM
 17 ANCESTOR_OF
 18 DESCENDANT_OF
 19 VARIANT_OF
 20 DISTRIBUTION_ARTIFACT
 21 PATCH_FOR
 22 PATCH_APPLIED
 23 COPY_OF
 24 FILE_ADDED
 25 FILE_DELETED
 26 FILE_MODIFIED
 27 EXPANDED_FROM_ARCHIVE
 28 DYNAMIC_LINK
 29 STATIC_LINK
 30 DATA_FILE_OF
 31 TEST_CASE_OF
 32 BUILD_TOOL_OF
 33 DEF_TOOL_OF
 34 TEST_OF
 35 TEST_TOOL_OF
 36 DOCUMENTATION_OF
 37 OPTIONAL_COMPONENT_OF
 38 METAFILE_OF
 39 PACKAGE_OF
 40 AMENDS
 41 PREREQUISITE_FOR
 42 HAS_PREREQUISITE
 98 NOASSERTION     // should deprecate
 99 OTHER
